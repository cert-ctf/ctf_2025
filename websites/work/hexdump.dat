00000000  23 69 6e 63 6c 75 64 65 20 3c 73 74 64 69 6f 2e  |#include <stdio.|
00000010  68 3e 0a 23 69 6e 63 6c 75 64 65 20 3c 73 74 72  |h>.#include <str|
00000020  69 6e 67 2e 68 3e 0a 0a 76 6f 69 64 20 72 6f 74  |ing.h>..void rot|
00000030  61 74 65 53 74 72 69 6e 67 28 63 68 61 72 2a 20  |ateString(char* |
00000040  73 74 72 2c 20 69 6e 74 20 73 68 69 66 74 29 20  |str, int shift) |
00000050  7b 0a 20 20 20 20 69 6e 74 20 6c 65 6e 20 3d 20  |{.    int len = |
00000060  73 74 72 6c 65 6e 28 73 74 72 29 3b 0a 20 20 20  |strlen(str);.   |
00000070  20 63 68 61 72 20 74 65 6d 70 5b 6c 65 6e 20 2b  | char temp[len +|
00000080  20 31 5d 3b 0a 20 20 20 20 0a 20 20 20 20 73 68  | 1];.    .    sh|
00000090  69 66 74 20 3d 20 73 68 69 66 74 20 25 20 6c 65  |ift = shift % le|
000000a0  6e 3b 20 0a 20 20 20 20 69 66 20 28 73 68 69 66  |n; .    if (shif|
000000b0  74 20 3c 20 30 29 20 73 68 69 66 74 20 2b 3d 20  |t < 0) shift += |
000000c0  6c 65 6e 3b 20 0a 20 20 20 20 0a 20 20 20 20 73  |len; .    .    s|
000000d0  74 72 6e 63 70 79 28 74 65 6d 70 2c 20 73 74 72  |trncpy(temp, str|
000000e0  20 2b 20 73 68 69 66 74 2c 20 6c 65 6e 20 2d 20  | + shift, len - |
000000f0  73 68 69 66 74 29 3b 0a 20 20 20 20 73 74 72 6e  |shift);.    strn|
00000100  63 70 79 28 74 65 6d 70 20 2b 20 6c 65 6e 20 2d  |cpy(temp + len -|
00000110  20 73 68 69 66 74 2c 20 73 74 72 2c 20 73 68 69  | shift, str, shi|
00000120  66 74 29 3b 0a 20 20 20 20 74 65 6d 70 5b 6c 65  |ft);.    temp[le|
00000130  6e 5d 20 3d 20 27 5c 30 27 3b 0a 0a 20 20 20 20  |n] = '\0';..    |
00000140  73 74 72 63 70 79 28 73 74 72 2c 20 74 65 6d 70  |strcpy(str, temp|
00000150  29 3b 0a 7d 0a 0a 76 6f 69 64 20 75 6e 72 6f 74  |);.}..void unrot|
00000160  61 74 65 53 74 72 69 6e 67 28 63 68 61 72 2a 20  |ateString(char* |
00000170  73 74 72 2c 20 69 6e 74 20 73 68 69 66 74 29 20  |str, int shift) |
00000180  7b 0a 20 20 20 20 72 6f 74 61 74 65 53 74 72 69  |{.    rotateStri|
00000190  6e 67 28 73 74 72 2c 20 2d 73 68 69 66 74 29 3b  |ng(str, -shift);|
000001a0  0a 7d 0a 0a 2f 2f 20 46 75 6e 6b 74 69 6f 6e 20  |.}..// Funktion |
000001b0  7a 75 6d 20 53 74 65 75 65 72 6e 20 64 65 72 20  |zum Steuern der |
000001c0  53 63 68 6c 65 75 73 65 20 62 61 73 69 65 72 65  |Schleuse basiere|
000001d0  6e 64 20 61 75 66 20 64 65 72 20 fc 62 65 72 67  |nd auf der überg|
000001e0  65 62 65 6e 65 6e 20 50 49 4e 2d 4b 61 72 74 65  |ebenen PIN-Karte|
000001f0  0a 76 6f 69 64 20 63 6f 6e 74 72 6f 6c 41 69 72  |.void controlAir|
00000200  6c 6f 63 6b 28 69 6e 74 20 70 69 6e 43 6f 64 65  |lock(int pinCode|
00000210  29 20 7b 0a 20 20 20 20 69 6e 74 20 63 6f 72 72  |) {.    int corr|
00000220  65 63 74 50 69 6e 20 3d 20 33 34 32 33 3b 0a 0a  |ectPin = 3423;..|
00000230  20 20 20 20 69 66 20 28 70 69 6e 43 6f 64 65 20  |    if (pinCode |
00000240  3d 3d 20 63 6f 72 72 65 63 74 50 69 6e 29 20 7b  |== correctPin) {|
00000250  0a 20 20 20 20 20 20 20 20 70 72 69 6e 74 66 28  |.        printf(|
00000260  22 52 69 63 68 74 69 67 65 72 20 50 49 4e 2d 43  |"Richtiger PIN-C|
00000270  6f 64 65 2e 20 44 69 65 20 53 63 68 6c 65 75 73  |ode. Die Schleus|
00000280  65 20 69 73 74 20 6a 65 74 7a 74 20 67 65 f6 66  |e ist jetzt geöf|
00000290  66 6e 65 74 2e 5c 6e 22 29 3b 0a 20 20 20 20 20  |fnet.\n");.     |
000002a0  20 20 20 63 68 61 72 20 73 65 65 64 5b 5d 20 3d  |   char seed[] =|
000002b0  20 22 38 63 69 42 6b 61 57 55 67 55 32 4e 6f 62  | "8ciBkaWUgU2Nob|
000002c0  47 56 31 63 32 55 67 61 58 4e 30 4f 69 41 33 4e  |GV1c2UgaXN0OiA3N|
000002d0  54 51 7a 52 32 7a 38 59 32 74 33 64 57 35 7a 59  |TQzR2z8Y2t3dW5zY|
000002e0  32 67 73 49 47 52 6c 63 69 42 44 62 32 52 6c 49  |2gsIGRlciBDb2RlI|
000002f0  47 62 22 3b 0a 0a 20 20 20 20 20 20 20 20 75 6e  |Gb";..        un|
00000300  72 6f 74 61 74 65 53 74 72 69 6e 67 28 73 65 65  |rotateString(see|
00000310  64 2c 20 70 69 6e 43 6f 64 65 29 3b 0a 20 20 20  |d, pinCode);.   |
00000320  20 20 20 20 20 70 72 69 6e 74 66 28 22 25 73 5c  |     printf("%s\|
00000330  6e 22 2c 20 73 65 65 64 29 3b 0a 20 20 20 20 7d  |n", seed);.    }|
00000340  20 65 6c 73 65 20 7b 0a 20 20 20 20 20 20 20 20  | else {.        |
00000350  70 72 69 6e 74 66 28 22 55 6e 67 fc 6c 74 69 67  |printf("Ungültig|
00000360  65 72 20 50 49 4e 2d 43 6f 64 65 2e 20 5a 75 67  |er PIN-Code. Zug|
00000370  72 69 66 66 20 76 65 72 77 65 69 67 65 72 74 2e  |riff verweigert.|
00000380  5c 6e 22 29 3b 0a 20 20 20 20 7d 0a 7d 0a 0a 69  |\n");.    }.}..i|
00000390  6e 74 20 6d 61 69 6e 28 29 20 7b 0a 20 20 20 20  |nt main() {.    |
000003a0  2f 2f 20 41 75 66 20 6b 65 69 6e 65 6e 20 46 61  |// Auf keinen Fa|
000003b0  6c 6c 20 64 69 65 73 65 20 56 61 72 69 61 62 6c  |ll diese Variabl|
000003c0  65 20 e4 6e 64 65 72 6e 0a 20 20 20 20 69 6e 74  |e ändern.    int|
000003d0  20 70 69 6e 43 6f 64 65 20 3d 20 30 3b 20 0a 0a  | pinCode = 0; ..|
000003e0  20 20 20 20 2f 2f 20 73 65 63 75 72 69 74 79 20  |    // security |
000003f0  63 61 72 64 20 2d 20 30 3a 20 66 61 6c 73 65 2c  |card - 0: false,|
00000400  20 31 3a 20 74 72 75 65 0a 20 20 20 20 69 6e 74  | 1: true.    int|
00000410  20 63 61 72 64 5f 66 6f 75 6e 64 20 3d 20 30 3b  | card_found = 0;|
00000420  20 0a 0a 20 20 20 20 2f 2f 20 dc 62 65 72 70 72  | ..    // Überpr|
00000430  fc 66 65 6e 2c 20 6f 62 20 65 69 6e 65 20 4b 61  |üfen, ob eine Ka|
00000440  72 74 65 20 67 65 66 75 6e 64 65 6e 20 77 75 72  |rte gefunden wur|
00000450  64 65 0a 20 20 20 20 69 66 20 28 63 61 72 64 5f  |de.    if (card_|
00000460  66 6f 75 6e 64 29 20 7b 0a 20 20 20 20 20 20 20  |found) {.       |
00000470  20 69 66 20 28 70 69 6e 43 6f 64 65 20 3d 3d 20  | if (pinCode == |
00000480  30 29 20 7b 0a 20 20 20 20 20 20 20 20 20 20 20  |0) {.           |
00000490  20 70 72 69 6e 74 66 28 22 50 49 4e 2d 43 6f 64  | printf("PIN-Cod|
000004a0  65 20 65 69 6e 67 65 62 65 6e 3a 20 22 29 3b 0a  |e eingeben: ");.|
000004b0  20 20 20 20 20 20 20 20 20 20 20 20 73 63 61 6e  |            scan|
000004c0  66 28 22 25 64 22 2c 20 26 70 69 6e 43 6f 64 65  |f("%d", &pinCode|
000004d0  29 3b 0a 20 20 20 20 20 20 20 20 7d 0a 0a 20 20  |);.        }..  |
000004e0  20 20 20 20 20 20 2f 2f 20 53 63 68 6c 65 75 73  |      // Schleus|
000004f0  65 20 73 74 65 75 65 72 6e 0a 20 20 20 20 20 20  |e steuern.      |
00000500  20 20 63 6f 6e 74 72 6f 6c 41 69 72 6c 6f 63 6b  |  controlAirlock|
00000510  28 70 69 6e 43 6f 64 65 29 3b 0a 20 20 20 20 7d  |(pinCode);.    }|
00000520  20 65 6c 73 65 20 7b 0a 20 20 20 20 20 20 20 20  | else {.        |
00000530  70 72 69 6e 74 66 28 22 4b 65 69 6e 65 20 4b 61  |printf("Keine Ka|
00000540  72 74 65 20 65 69 6e 67 65 73 74 65 63 6b 74 2e  |rte eingesteckt.|
00000550  5c 6e 22 29 3b 0a 20 20 20 20 7d 0a 0a 20 20 20  |\n");.    }..   |
00000560  20 72 65 74 75 72 6e 20 30 3b 0a 7d 0a 0a        | return 0;.}..|